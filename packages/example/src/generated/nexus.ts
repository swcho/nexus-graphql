/**
 * This file was automatically generated by Nexus 0.11.6
 * Do not make changes to this file directly
 */

import * as ctx from "../context"


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  OrderInput: { // input type
    complete?: boolean | null; // Boolean
    id?: number | null; // Float
    petId?: number | null; // Float
    quantity?: number | null; // Int
    shipDate?: string | null; // String
    status?: NexusGenEnums['Status2'] | null; // Status2
  }
}

export interface NexusGenEnums {
  Status: "available" | "pending" | "sold"
  Status2: "approved" | "delivered" | "placed"
  Status3ListItem: "available" | "pending" | "sold"
}

export interface NexusGenRootTypes {
  ApiResponse: {};
  Category: {};
  Mutation: {};
  Order: {};
  Pet: {};
  Query: {};
  Tag: {};
  User: {};
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  JSON: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  OrderInput: NexusGenInputs['OrderInput'];
  Status: NexusGenEnums['Status'];
  Status2: NexusGenEnums['Status2'];
  Status3ListItem: NexusGenEnums['Status3ListItem'];
}

export interface NexusGenFieldTypes {
  ApiResponse: { // field return type
    code: number | null; // Int
    message: string | null; // String
    type: string | null; // String
  }
  Category: { // field return type
    id: number | null; // Float
    name: string | null; // String
  }
  Mutation: { // field return type
    placeOrder: NexusGenRootTypes['Order'] | null; // Order
    uploadFile: NexusGenRootTypes['ApiResponse'] | null; // ApiResponse
  }
  Order: { // field return type
    complete: boolean | null; // Boolean
    id: number | null; // Float
    petId: number | null; // Float
    quantity: number | null; // Int
    shipDate: string | null; // String
    status: NexusGenEnums['Status2'] | null; // Status2
  }
  Pet: { // field return type
    category: NexusGenRootTypes['Category'] | null; // Category
    id: number | null; // Float
    name: string | null; // String
    noOfTags: number; // Float!
    photoUrls: string[] | null; // [String!]
    status: NexusGenEnums['Status'] | null; // Status
    tags: NexusGenRootTypes['Tag'][] | null; // [Tag!]
  }
  Query: { // field return type
    order: NexusGenRootTypes['Order'] | null; // Order
    pet: NexusGenRootTypes['Pet'] | null; // Pet
    petFindByStatus: NexusGenRootTypes['Pet'][] | null; // [Pet!]
    petFindByTags: NexusGenRootTypes['Pet'][] | null; // [Pet!]
    storeInventory: any | null; // JSON
    user: NexusGenRootTypes['User'] | null; // User
    userLogin: string | null; // String
  }
  Tag: { // field return type
    id: number | null; // Float
    name: string | null; // String
  }
  User: { // field return type
    email: string | null; // String
    firstName: string | null; // String
    id: number | null; // Float
    lastName: string | null; // String
    password: string | null; // String
    phone: string | null; // String
    username: string | null; // String
    userStatus: number | null; // Int
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    placeOrder: { // args
      orderInput: NexusGenInputs['OrderInput']; // OrderInput!
    }
    uploadFile: { // args
      multipartFormDataInput?: string | null; // String
      petId: number; // Float!
    }
  }
  Query: {
    order: { // args
      orderId: number; // Float!
    }
    pet: { // args
      petId: number; // Float!
    }
    petFindByStatus: { // args
      status: NexusGenEnums['Status3ListItem'][]; // [Status3ListItem!]!
    }
    petFindByTags: { // args
      tags: string[]; // [String!]!
    }
    user: { // args
      username: string; // String!
    }
    userLogin: { // args
      password: string; // String!
      username: string; // String!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "ApiResponse" | "Category" | "Mutation" | "Order" | "Pet" | "Query" | "Tag" | "User";

export type NexusGenInputNames = "OrderInput";

export type NexusGenEnumNames = "Status" | "Status2" | "Status3ListItem";

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Float" | "ID" | "Int" | "JSON" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: ctx.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}