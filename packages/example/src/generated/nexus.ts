/**
 * This file was automatically generated by Nexus 0.11.6
 * Do not make changes to this file directly
 */

import * as ctx from "../context"


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenRootTypes {
  Meta: {};
  Mutation: {};
  Notification: {};
  Query: {};
  Stat: {};
  Tweet: {};
  User: {};
  String: string;
  Int: number;
  Float: number;
  Boolean: boolean;
  ID: string;
  Date: any;
  Url: any;
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
}

export interface NexusGenFieldTypes {
  Meta: { // field return type
    count: number | null; // Int
  }
  Mutation: { // field return type
    createTweet: NexusGenRootTypes['Tweet'] | null; // Tweet
    deleteTweet: NexusGenRootTypes['Tweet'] | null; // Tweet
    markTweetRead: boolean | null; // Boolean
  }
  Notification: { // field return type
    date: any | null; // Date
    id: string | null; // ID
    type: string | null; // String
  }
  Query: { // field return type
    Notifications: NexusGenRootTypes['Notification'][] | null; // [Notification!]
    NotificationsMeta: NexusGenRootTypes['Meta'] | null; // Meta
    Tweet: NexusGenRootTypes['Tweet'] | null; // Tweet
    Tweets: NexusGenRootTypes['Tweet'][] | null; // [Tweet!]
    TweetsMeta: NexusGenRootTypes['Meta'] | null; // Meta
    User: NexusGenRootTypes['User'] | null; // User
  }
  Stat: { // field return type
    likes: number | null; // Int
    responses: number | null; // Int
    retweets: number | null; // Int
    views: number | null; // Int
  }
  Tweet: { // field return type
    Author: NexusGenRootTypes['User'] | null; // User
    body: string | null; // String
    date: any | null; // Date
    id: string; // ID!
    Stats: NexusGenRootTypes['Stat'] | null; // Stat
  }
  User: { // field return type
    avatar_url: any | null; // Url
    first_name: string | null; // String
    full_name: string | null; // String
    id: string; // ID!
    last_name: string | null; // String
    name: string | null; // String
    username: string | null; // String
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createTweet: { // args
      body?: string | null; // String
    }
    deleteTweet: { // args
      id: string; // ID!
    }
    markTweetRead: { // args
      id: string; // ID!
    }
  }
  Query: {
    Notifications: { // args
      limit?: number | null; // Int
    }
    Tweet: { // args
      id: string; // ID!
    }
    Tweets: { // args
      limit?: number | null; // Int
      skip?: number | null; // Int
      sort_field?: string | null; // String
      sort_order?: string | null; // String
    }
    User: { // args
      id: string; // ID!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Meta" | "Mutation" | "Notification" | "Query" | "Stat" | "Tweet" | "User";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "Date" | "Float" | "ID" | "Int" | "String" | "Url";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: ctx.Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}