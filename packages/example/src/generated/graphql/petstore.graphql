"""API key credentials for the security protocol 'api_key'"""
input ApiKeyInput {
  """No description available."""
  apiKey: String
}

"""Describes the result of uploading an image resource"""
type ApiResponse {
  """No description available."""
  code: Int

  """No description available."""
  message: String

  """No description available."""
  type: String
}

"""A category for a pet"""
type Category {
  """No description available."""
  id: Float

  """No description available."""
  name: String
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""The start of any mutation"""
type Mutation {
  """
  Place an order for a pet
  
  Equivalent to POST /store/order
  """
  placeOrder(
    """An order for a pets from the pet store"""
    orderInput: OrderInput!
  ): Order

  """
  uploads an image
  
  Equivalent to POST /pet/{petId}/uploadImage
  """
  uploadFile(
    """multipart/form-data request placeholder object"""
    multipartFormDataInput: String

    """ID of pet to update"""
    petId: Float!
  ): ApiResponse
}

"""An order for a pets from the pet store"""
type Order {
  """No description available."""
  complete: Boolean

  """No description available."""
  id: Float

  """No description available."""
  petId: Float

  """No description available."""
  quantity: Int

  """No description available."""
  shipDate: String

  """Order Status"""
  status: Status2
}

"""An order for a pets from the pet store"""
input OrderInput {
  """No description available."""
  complete: Boolean

  """No description available."""
  id: Float

  """No description available."""
  petId: Float

  """No description available."""
  quantity: Int

  """No description available."""
  shipDate: String

  """Order Status"""
  status: Status2
}

"""A pet for sale in the pet store"""
type Pet {
  """A category for a pet"""
  category: Category

  """No description available."""
  id: Float

  """No description available."""
  name: String

  """No description available."""
  photoUrls: [String]

  """pet status in the store"""
  status: Status

  """No description available."""
  tags: [Tag]
}

"""The start of any query"""
type Query {
  """
  For valid response try integer IDs with value <= 5 or > 10. Other values will generated exceptions
  
  Equivalent to GET /store/order/{orderId}
  """
  order(
    """ID of pet that needs to be fetched"""
    orderId: Float!
  ): Order

  """
  Multiple status values can be provided with comma separated strings
  
  Equivalent to GET /pet/findByStatus
  """
  petFindByStatus(
    """Status values that need to be considered for filter"""
    status: [Status3ListItem]!
  ): [Pet]

  """
  Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
  
  Equivalent to GET /pet/findByTags
  """
  petFindByTags(
    """Tags to filter by"""
    tags: [String]!
  ): [Pet]

  """
  Get user by user name
  
  Equivalent to GET /user/{username}
  """
  user(
    """The name that needs to be fetched. Use user1 for testing."""
    username: String!
  ): User

  """
  Logs user into the system
  
  Equivalent to GET /user/login
  """
  userLogin(
    """The password for login in clear text"""
    password: String!

    """The user name for login"""
    username: String!
  ): String

  """
  A viewer that wraps all operations authenticated via security scheme 'api_key', which is of type 'apiKey'
  """
  viewerApiKey(apiKey: String!): viewerApiKey

  """
  A viewer that wraps operations for all available authentication mechanisms
  """
  viewerAnyAuth(apiKey: ApiKeyInput): viewerAnyAuth
}

enum Status {
  available
  pending
  sold
}

enum Status2 {
  placed
  approved
  delivered
}

enum Status3ListItem {
  available
  pending
  sold
}

"""A tag for a pet"""
type Tag {
  """No description available."""
  id: Float

  """No description available."""
  name: String
}

"""A User who is purchasing from the pet store"""
type User {
  """No description available."""
  email: String

  """No description available."""
  firstName: String

  """No description available."""
  id: Float

  """No description available."""
  lastName: String

  """No description available."""
  password: String

  """No description available."""
  phone: String

  """User Status"""
  userStatus: Int

  """No description available."""
  username: String
}

"""Warning: Not every request will work with this viewer type"""
type viewerAnyAuth {
  """
  Returns a single pet
  
  Equivalent to GET /pet/{petId}
  """
  pet(
    """ID of pet to return"""
    petId: Float!
  ): Pet

  """
  Returns a map of status codes to quantities
  
  Equivalent to GET /store/inventory
  """
  storeInventory: JSON
}

"""A viewer for security scheme 'api_key'"""
type viewerApiKey {
  """
  Returns a single pet
  
  Equivalent to GET /pet/{petId}
  """
  pet(
    """ID of pet to return"""
    petId: Float!
  ): Pet

  """
  Returns a map of status codes to quantities
  
  Equivalent to GET /store/inventory
  """
  storeInventory: JSON
}
